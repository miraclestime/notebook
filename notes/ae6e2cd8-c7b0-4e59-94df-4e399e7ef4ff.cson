createdAt: "2019-12-16T08:08:54.129Z"
updatedAt: "2019-12-16T08:38:01.965Z"
type: "MARKDOWN_NOTE"
folder: "5b24b76c5b369d916d33"
title: "static关键字"
tags: [
  "static"
]
content: '''
  #static关键字
  ### 1
  1. 被static关键字修饰的不需要创建对象去调用，直接根据类名就可以去访问
  2. java里面static一般用来修饰成员变量或函数。但有一种特殊用法是用static修饰内部类，普通类是不允许声明为静态的，只有内部类才可以。
  3. 被static修饰的成员变量叫做静态变量，也叫做类变量，说明这个变量是属于这个类的，而不是属于是对象，没有被static修饰的成员变量叫做实例变量，说明这个变量是属于某个具体的对象的
  
  ### static使用方法
  `class Student{
      
      static String school;  // 随着类的加载而执行 可以由类进行调用
      
      static {
          // 静态代码块 加载类时需要进行的初始化操作，比如说加载驱动
      }   
  
      public static void study(){
          // 静态方法 ，可以调用其他的静态方法。
          // 可以调用其他 静态变量
          // 但是不可以调用非静态的变量 ，加载时间不同
      }
  }`
  
  ### 2 类初始化的顺序
  父类静态变量
  
  父类静态代码块
  
  子类静态变量
  
  子类静态代码块
  
  父类普通变量
  
  父类普通代码块
  
  父类构造函数
  
  子类普通变量
  
  子类普通代码块
  
  子类构造函数
  
  ### 1
  我们知道，当我们通过new关键字去创建对象的时候，那么数据的存储空间才会被分配，类中的成员方法才能被对象所使用。但是呢有两种特殊的情况：1、我们通过new关键字创建的对象共享同一个资源，而不是说每个对象都拥有自己的数据，或者说根本就不需要去创建对象，这个资源和对象之间是没有关系的。2、希望某个方法不与包含它的类的任何对象联系在一起。总结下来就是说：即使没有创建对象，也能使用属性和调用方法，static目的就是在于解决这个问题。
  
  ### 小结：
  
  （1）特点：
  
  1、static是一个修饰符，用于修饰成员。（成员变量，成员函数）static修饰的成员变量 称之为静态变量或类变量。
  
  2、static修饰的成员被所有的对象共享。
  
  3、static优先于对象存在，因为static的成员随着类的加载就已经存在。
  
  4、static修饰的成员多了一种调用方式，可以直接被类名所调用，（类名.静态成员）。
  
  5、static修饰的数据是共享数据，对象中的存储的是特有的数据。
  
  （2）成员变量和静态变量的区别：
  
  1、生命周期的不同：
  
  成员变量随着对象的创建而存在随着对象的回收而释放。
  
  静态变量随着类的加载而存在随着类的消失而消失。
  
  2、调用方式不同：
  
  成员变量只能被对象调用。
  
  静态变量可以被对象调用，也可以用类名调用。（推荐用类名调用）
  
  3、别名不同：
  
  成员变量也称为实例变量。
  
  静态变量称为类变量。
  
  4、数据存储位置不同：
  
  成员变量数据存储在堆内存的对象中，所以也叫对象的特有数据。
  
  静态变量数据存储在方法区（共享数据区）的静态区，所以也叫对象的共享数据。
  
  （3）静态使用时需要注意的事项：
  
  1、静态方法只能访问静态成员。（非静态既可以访问静态，又可以访问非静态）
  
  2、静态方法中不可以使用this或者super关键字。
  
  3、主函数是静态的
'''
linesHighlighted: []
isStarred: false
isTrashed: false
