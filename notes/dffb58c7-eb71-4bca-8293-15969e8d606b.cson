createdAt: "2019-12-09T07:15:20.480Z"
updatedAt: "2019-12-09T07:52:47.920Z"
type: "MARKDOWN_NOTE"
folder: "0a23bd7f6ab7c3a7ddd6"
title: "go学习笔记"
tags: [
  "go"
]
content: '''
  # go学习笔记
  ## 1. 了解go
  ### 1.1 优势
  > 1) 相对于 C/C++ 来讲，Go语言拥有清晰的依赖管理和全自动的垃圾回收机制，因此其代码量大大降低，开发效率大大提高。
  
  > 2) 相对于 Java 来讲，Go语言拥有简明的类型系统、函数式编程范式和先进的并发编程模型。因此其代码块更小更简洁、可重用性更高，并可在多核计算环境下更快地运行。
  ### 1.2 劣势
  >1. 从分布式计算的角度来看，Go语言的成熟度不及 Erlang
  > 2. 从程序运行速度的角度来看，Go语言虽然已与 Java 不相上下，但还不及 C
  > 3. 会在垃圾回收期间停止所有用户程序的操作。这一点多少会影响到对实时性要求比较高的应用
  
  ## 2. 多语言性能对比
  ![0e5063f3.png](:storage\\dffb58c7-eb71-4bca-8293-15969e8d606b\\0e5063f3.png)
  
  ## 3. 常用标准库
  ![7d62c983.png](:storage\\dffb58c7-eb71-4bca-8293-15969e8d606b\\7d62c983.png)
  ![c50af3ac.png](:storage\\dffb58c7-eb71-4bca-8293-15969e8d606b\\c50af3ac.png)
  
  ## 4. go语言的编译过程
  >编译器的前端和后端，编译器的前端一般承担着词法分析、语法分析、类型检查和中间代码生成几部分工作，而编译器后端主要负责目标代码的生成和优化，也就是将中间代码翻译成目标机器能够运行的机器码
'''
linesHighlighted: []
isStarred: false
isTrashed: false
isPinned: false
