createdAt: "2019-12-17T02:32:39.883Z"
updatedAt: "2019-12-17T06:21:56.996Z"
type: "MARKDOWN_NOTE"
folder: "7ca834648924395d0cc8"
title: "mysql学习笔记-数据类型"
tags: []
content: '''
  # mysql学习笔记-数据类型
  ## 1. 数据类型
  主要有数值类型、日期时间类型、字符串类型
  ![41188543.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\41188543.png)
  ### 1.1 整形
  ![0e239103.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\0e239103.png)
  ![32fe6a40.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\32fe6a40.png)
  显示宽度只用于显示，并不能限制取值范围和占用空间，如：int(3)会占用4个字节的存储空间，允许的最大值也不是999，而是int类型允许的最大值。
  
  ### 1.2 小数
  ![d5dcd975.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\d5dcd975.png)
  1. 定点数以字符串形式存储，对精度要求高时，使用decimal类型比较好；
  2. 浮点数进行减法和比较运算时也可能会有问题。
  
  ### 1.3 日期
  ![bb9bd496.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\bb9bd496.png)
  
  ## 2. 数据类型选择
  ### 2.1 char和varchar
  ![3c4bff14.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\3c4bff14.png)
  ### 2.2 enum和set
  以字符串形式出现，在内部，mysql以数值形式存储。
  
  问题：不常用enum和set的原因？
  1. 不熟；
  2. 灵活度不够；
  3. 对数字类型的存储用int可能更好；
  
  ## 3. 运算
  ### 3.1 除和求余
  ![1c2e9d6d.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\1c2e9d6d.png)
  
  ### 3.2 比较运算
  一个比较运算的结果总是1、0或者NULL。
  1. 数值比较的规则
  ![4f75802c.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\4f75802c.png)
  2. 安全等于运算符<=>
  <=>和=作用相似，唯一的区别就是<=>可以用来对NULL进行判断，两者都为NULL时返回1；
  3. !=和<>
  作用相同。
  
  ### 3.3 逻辑运算
  1. NOT和！
  NOT的优先级低于+，！优先级高于+，所以逻辑运算时，最好加（）来保证运算优先级。
  
  ### 3.4 位运算
  ![c4e41a2c.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\c4e41a2c.png)
  
  ### 4. 运算符优先级
  ![2bc077b2.png](:storage\\1701b18d-d21e-4180-851d-f11f72440cf6\\2bc077b2.png)
  
  ### 5. 其他
  1. 使用特殊字符
  进行转义：反斜线开头‘\\’，如 \\', \\", \\\\等。
  2. 大小写字符串比较
  windows下不区分大小写，a=A返回1，可以加BINARY区分大小写，如：BINARY a=A返回0。
  linux下如果区分大小写，可以修改/etc/my.cnf文件，[mysqld]后添加添加lower_case_table_names=1，重启MYSQL服务，设置不区分表名的大小写。
  
  
  
  
  
  
  
  
  
  
  
'''
linesHighlighted: []
isStarred: false
isTrashed: false
